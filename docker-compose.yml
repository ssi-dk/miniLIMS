version: '3'
services:
  flask:
    build:
      context: app
      dockerfile: Dockerfile
    container_name: flask
    image: ssi-dk/minilims-flask:0.0.3
    restart: unless-stopped
    env_file:
      - .app.prod.env
    environment:
      APP_ENV: "prod"
      APP_DEBUG: "False"
      APP_PORT: 5000
      MONGODB_DATABASE: flaskdb
      MONGODB_AUTH_DATABASE: flaskdb
      MONGODB_HOSTNAME: mongodb
    volumes:
      - appdata:/var/www/data
    depends_on:
      - mongodb
    networks:
      - frontend
      - backend
  mongodb:
    image: mongo:4.0.8
    container_name: mongodb
    restart: unless-stopped
    command: mongod --auth
    env_file:
      - .mongodb.prod.env
    environment:
      MONGO_INITDB_DATABASE: flaskdb
      MONGODB_DATA_DIR: /data/db
      MONDODB_LOG_DIR: /dev/null
    volumes:
      - mongodbdata:/data/db
    networks:
      - backend
  webserver:
    build:
      context: nginx
      dockerfile: Dockerfile
    image: ssi-dk/minilims-webserver:0.0.1
    container_name: webserver
    restart: unless-stopped
    environment:
      APP_ENV: "prod"
      APP_NAME: "webserver"
      APP_DEBUG: "false"
      SERVICE_NAME: "webserver"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - nginxdata:/var/log/nginx
    depends_on:
      - flask
    networks:
      - frontend
networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge
volumes:
  mongodbdata:
    driver: local
  appdata:
    driver: local
  nginxdata:
    driver: local